# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# make capslock esc
exec setxkbmap -option caps:escape

set $gtk-theme Matcha-dark-sea
set $icon-theme Papirus-Dark-Maia
set $cursor-theme xcursor-breeze
set $gui-font Roboto 11
set $term-font RobotoMono Nerd Font 14
set $kvantum-theme Matchama-Dark

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 12
font Roboto 11

exec gsettings set org.gnome.desktop.interface gtk-theme $gtk-theme
exec gsettings set org.gnome.desktop.interface icon-theme $icon-theme
exec gsettings set org.gnome.desktop.interface cursor-theme $cursor-theme
exec gsettings set org.gnome.desktop.interface font-name $gui-font

# exec_always {
#   gsettings set org.gnome.desktop.interface gtk-theme $gtk-theme
#   gsettings set org.gnome.desktop.interface icon-theme $icon-theme
#   gsettings set org.gnome.desktop.interface cursor-theme $cursor-theme
#   gsettings set org.gnome.desktop.interface font-name $gui-font
# }

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty
# kill focused window
bindsym $mod+q kill

focus_follows_mouse no

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
#bindcode $mod+space exec "rofi -modi drun,run -show drun"
bindsym $mod+space exec alacritty --title "pop-up" --command sway-launcher-desktop
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
#bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+bracketright workspace next
bindsym $mod+bracketleft workspace prev
bindsym $mod+shift+l workspace next
bindsym $mod+shift+h workspace prev

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 2 px or 2 ppt
        bindsym k resize grow height 2 px or 2 ppt
        bindsym j resize shrink height 2 px or 2 ppt
        bindsym l resize grow width 2 px or 2 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#Nitrogen
exec --no-startup-id nitrogen --restore

#Polybar
#exec --no-startup-id polybar -r mybar

#Polybar Sh
#exec_always --no-startup-id $HOME/.config/polybar/launch.sh
#exec_always --no-startup-id $HOME/.config/polybar/music.sh

# Screen brightness controls
# increase screen brightness
bindsym XF86MonBrightnessUp exec xbacklight -inc 20
# decrease screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20

#Luz background
#bindsym XF86MonBrightnessUp exec light -A 1 # increase screen brightness
#bindsym XF86MonBrightnessDown exec light -U 1 # decrease screen brightness

# Start i3bar to display a workspace bar (plus the system information i3st>
# finds out, if available)
bar {
  status_command i3status
#mode hide
#output primary
#tray_output none
  font pango:RobotoMono Nerd Font Bold 10
  separator_symbol ⁞
  colors {
    background #000000
    statusline #ffffff
    separator #333333

    focused_workspace  #10F9FC #10F9FC #000000
    active_workspace   #333333 #5f676a #ffffff
    inactive_workspace #000000 #000000 #10F9FC
    urgent_workspace   #2f343a #900000 #ffffff
    binding_mode       #2f343a #900000 #ffffff
  }
}

#Pop up
for_window [window_role="pop-up"] floating enable
for_window [title="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

#Sem borda
for_window [class="^.*"] border pixel 3
for_window [title="pop-up"] border pixel 6
new_window 1pixel

set $borderColor #10f90C
set $windowTitleBG $borderColor

client.focused $borderColor $windowTitleBG #000000 #000000 $borderColor
client.unfocused #000000 $windowTitleBG #000000 #000000 #000000

# Provide Gaps to Windows. Increase/Decrease as you like.
smart_borders on
gaps inner 10
gaps outer 0

#print da poha da tela
#Original
#bindsym --release Print exec "scrot 'scrot-%Y-%m-%d_%h-%m-%s_$wx$h.png' -e 'mv $f ~/img/scrot/ && xclip -t image/png ~/img/scrot/$f -sel clip'"
#bindsym --release Shift+Print exec "scrot --select 'scrot-%Y-%m-%d_%h-%m-%s_$wx$h_snip.png' -e 'mv $f ~/img/scrot/ && xclip -t image/png ~/img/scrot/$>

# Meu Scrot
bindsym --release Print exec "scrot 'scrot-%Y-%m-%d_%h-%m-%s_$wx$h.png' -e 'mv $f ~/Pictures/Screenshot && xclip -t image/png ~~/Pictures/Screenshot/$f -sel clip'"
bindsym --release Shift+Print exec "scrot --select 'scrot-%Y-%m-%d_%h-%m-%s_$wx$h_snip.png' -e 'mv $f ~/Pictures/Screenshot && xclip -t image/png ~/Pictures/Screenshot$f -sel clip'"

# Teste
#~/Pictures/%Y-%m-%d-%H-%M-%S.png

# Firefox
bindsym $mod+b exec firefox

# Files
#bindsym $mod+e exec nautilus
