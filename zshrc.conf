# git clone https://github.com/tarjoilija/zgen.git "${HOME}/.zgen"
# source "${HOME}/.zgen/zgen.zsh"
# install fzf, then:
# zgen load urbainvaes/fzf-marks
# source ~/.zgen/urbainvaes/fzf-marks-master/fzf-marks.plugin.zsh

source ~/.zsh/fzf-marks.zsh
source ~/.zsh/lf-jump.zsh
source ~/.zsh/fzf-templates.zsh

export PATH=$PATH:$HOME/.local/share/nvim/mason/bin/:$HOME/.cargo/bin/

# block cursor (5=bar)
echo '\e[1 q'

alias lg=lazygit
alias gs="git status"
alias gl="git log"
alias gp="git push"
alias b="git branch "$@" --sort=-committerdate --sort=-HEAD --format=$'%(HEAD) %(color:yellow)%(refname:short) %(color:green)(%(committerdate:relative))\t%(color:blue)%(subject)%(color:reset)' --color=always | column -ts$'\t'"
alias branch="b"
alias gb="b"
alias push="git push"
alias pull="git pull"
alias gd="git diff"
alias cb="cargo build"
alias cc="cargo check"
alias cr="cargo run"
alias ct="cargo test"
alias unzip 'atool --extract --explain $1'
alias wiki='cd ~/wiki && nvim +Goyo ~/wiki/index.md'
# alias w='cd ~/wiki && nvim +Goyo ~/wiki/index.md'
alias e=nvim
alias edit=nvim
alias e-config="cd ~/config/ && edit ."
alias e-neovim="cd ~/config/neovim/ && edit init.lua"
alias e-zsh="cd ~/config/ && edit zshrc.conf"

alias c="e-config"
alias c-neovim="e-neovim"
alias c-zsh="e-zsh"

alias t="fzf_create_template"
alias new="fzf_create_template"
alias template="fzf_create_template"

alias vim=nvim
alias vi=nvim

alias dd='WD=${PWD} && cd ~/config/ && dotter --cache-directory ~/.config/dotter/cache/ --cache-file ~/.config/dotter/cache.toml deploy --global-config global.toml --local-config local.toml && cd $WD'
alias dw='cd ~/config/ && dotter --cache-directory ~/.config/dotter/cache/ --cache-file ~/.config/dotter/cache.toml watch --global-config global.toml --local-config local.toml'

alias l=lfcd
alias p="ping cloudflare.com"
alias scrt="secretcli"
alias l="exa --icons --group-directories-first"
alias la="exa --icons --group-directories-first --all"
alias lh="exa --icons --group-directories-first --all"
alias ll="exa --icons --group-directories-first --all -l"
alias lln="exa --icons --all -l --sort=date"
alias vi="nvim"
alias vim="nvim"
alias prev="fzf --layout=reverse --preview 'bat --style=numbers --color=always --line-range :500 {}'"

# todo: convert to fzf
alias doc="cargo doc --open"
alias d-yew="open https://yew.rs/docs/next/"
alias d-rs-yew="open https://docs.rs/yew/latest/yew/"
alias d-rustup-cargo="rustup doc --cargo"
alias d-rustup-core="rustup doc --core"
alias d-wasmtime="open https://docs.wasmtime.dev/"

alias gen-yew-web3="cargo generate --git https://github.com/monomadic/yew-web3-template"

alias ls-colors='for x in {0..8}; do for i in {30..37}; do for a in {40..47}; do echo -ne "\e[$x;$i;$a""m\\\e[$x;$i;$a""m\e[0;37;40m "; done; echo; done; done; echo ""'

# note: never put nvim in quotes... will print ctrl characters
# export EDITOR=nvim
export TERM="xterm-256color"
export HOSTNAME=`hostname`

if [[ $HOSTNAME = "nom.local" ]]
	then
		export PROMPT='%T %F{cyan}%~%b%f $ '
	else
		export PROMPT="%T $HOSTNAME %F{green}%~%b%f > "
fi

# foundry
export PATH="$PATH:/Users/nom/.foundry/bin"

# colors
# export LS_COLORS="$(vivid generate molokai)"

# bun
export BUN_INSTALL="/Users/nom/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
[ -s "/Users/nom/.bun/_bun" ] && source "/Users/nom/.bun/_bun"

# microcommit
gc () {
	git add . &&
	git commit -a -m "$@" &&
	git push
}

# bindkey -s '^l' 'lfcd\n'
# -s translate input string to output
zle -N lfcd; bindkey '^ ' lfcd #register widget + key

bindkey '^o' fzm

# # joshuto directory change
# function joshutocd() {
# 	local tmp="$(mktemp)"
# 	joshuto
# 	if [ -f "$tmp" ]; then
# 			dir="$(cat "$tmp")"
# 			rm -f "$tmp"
# 			if [ -d "$dir" ]; then
# 					if [ "$dir" != "$(pwd)" ]; then
# 							cd "$dir"
# 							zle && zle reset-prompt # clear
# 					fi
# 			fi
# 	fi
# }
# zle -N joshutocd; bindkey '^i' joshutocd #register widget + key

function fzf_insert() {
	# sk --preview 'bat --style=numbers --color=always --line-range :500 {}'
	files=($(fd --strip-cwd-prefix --max-depth 1 --max-results 10000 | \
		fzf --prompt 'insert > ' --layout=reverse --preview 'exa --icons --group-directories-first {}' \
			--height 50% \
			--header $'ctrl-e:edit, ctrl-o:open\n' \
			--bind 'ctrl-e:execute:${EDITOR:-nvim} {1}' \
			--bind 'ctrl-o:execute:open {1}' \
		"$@"))
	# [[ -n "$files" ]] && cd "${files[@]}"
	# print $files
	# zle && zle reset-prompt
	#[ -n "$files" ] &&
	print -z -- "$1 ${files[@]:q:q}"
	zle
}
zle -N fzf_insert; bindkey '^y' fzf_insert

function fzf_jump_dir() {
	# sk --preview 'bat --style=numbers --color=always --line-range :500 {}'
	files=($(fd --type d --strip-cwd-prefix --max-depth 1 --max-results 10000 | \
		fzf --prompt 'dirs > ' --layout=reverse --preview 'exa --icons --group-directories-first {}' \
			--height 50% \
			--header $'ctrl-e:edit, ctrl-o:open\n' \
			--bind 'ctrl-e:execute:${EDITOR:-nvim} {1}' \
			--bind 'ctrl-o:execute:open {1}' \
		"$@"))
	[[ -n "$files" ]] && cd "${files[@]}"
	zle && zle reset-prompt
}
zle -N fzf_jump_dir; bindkey '^j' fzf_jump_dir

function fzf_jump_dir_ext() {
	# sk --preview 'bat --style=numbers --color=always --line-range :500 {}'
	files=($(fd --type d --strip-cwd-prefix --max-depth 3 --max-results 10000 | fzf --prompt 'dirs > ' --layout=reverse --preview 'exa --icons --group-directories-first {}' \
		--header $'ctrl-e:edit, ctrl-o:open\n' \
		--bind 'ctrl-e:execute:${EDITOR:-nvim} {1}' \
		--bind 'ctrl-o:execute:open {1}' \
		"$@"))
	[[ -n "$files" ]] && cd "${files[@]}"
	zle && zle reset-prompt
}
zle -N fzf_jump_dir_ext; bindkey '^k' fzf_jump_dir_ext

function fzf_find() {
	# sk --preview 'bat --style=numbers --color=always --line-range :500 {}'
	files=($(fd --type d --strip-cwd-prefix --hidden --max-depth 5 --max-results 10000 | fzf --prompt 'files > ' --layout=reverse --preview 'bat --style=numbers --color=always --line-range :500 {}' \
		--header $'ctrl-e:edit, ctrl-o:open, ctrl-f:files, ctrl-d:dirs\n' \
		--bind 'ctrl-d:change-prompt(dirs > )+reload(find * -type d)' \
		--bind 'ctrl-e:execute:${EDITOR:-nvim} {1}' \
    --bind 'ctrl-f:change-prompt(files > )+reload(find * -type f)' \
		--bind 'ctrl-o:execute:open {1}' \
		"$@"))
	[[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}
zle -N fzf_find; bindkey '^f' fzf_find
