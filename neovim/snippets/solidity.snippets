snippet pragma
	// SPDX-License-Identifier: UNLICENSED
	pragma solidity ^0.8.13;

snippet contract
	contract ${1} {
		constructor() {
			${0}
		}
	}

snippet event "event"
	event ${1}(${2});

snippet emit-event
	emit ${1:name}(${2});

snippet example-emit-event
	emit Deposit(msg.sender, msg.value);

snippet function
	function ${1:function_name}(${2:arguments}) ${3|external,public|} {
		${0}
	}

snippet constructor
	constructor() {
		${0}
	}

snippet example-contract
	// SPDX-License-Identifier: UNLICENSED
	pragma solidity ^0.8.13;

	import "solmate/tokens/ERC20.sol";

	interface IERC20 {
			function balanceOf(address) external returns (uint256);
			function transfer(address to, uint256 amount) external;
	}

	contract Token is ERC20 {
			constructor(
					string memory name,
					string memory symbol,
					uint8 decimals,
					uint256 initialSupply
			) ERC20(name, symbol, decimals) {
					_mint(msg.sender, initialSupply);
			}
	}
