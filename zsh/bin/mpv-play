#!/bin/zsh

# Display usage information
show_usage() {
  cat <<EOF
Usage: $0 [options] [files...]
       cat playlist.txt | $0 [options]

Options:
  --start-random    Start playback from a random item in playlist

Examples:
  $0 video1.mp4 video2.mp4
  $0 --start-random *.mp4
  cat playlist.txt | $0 --start-random
EOF
}

# Check if mpv is installed
if ! command -v mpv >/dev/null 2>&1; then
  echo "Error: mpv is not installed. Please install mpv."
  exit 1
fi

# Parse arguments
start_random=false
zparseopts -D -E -start-random=start_random_flag

if [[ -n "$start_random_flag" ]]; then
  start_random=true
fi

# Determine input source
if [[ $# -gt 0 ]]; then
  # Files provided as arguments
  if [[ "$start_random" == "true" ]]; then
    # Create array and shuffle for random start
    files=("$@")
    start_index=$((RANDOM % ${#files[@]}))
    mpv --macos-fs-animation-duration=0 \
      --no-native-fs \
      --fs \
      --mute=yes \
      --playlist-start="$start_index" \
      "${files[@]}"
  else
    mpv --macos-fs-animation-duration=0 \
      --no-native-fs \
      --fs \
      --mute=yes \
      "$@"
  fi
elif [[ ! -t 0 ]]; then
  # Input from stdin
  if [[ "$start_random" == "true" ]]; then
    playlist=$(cat)
    line_count=$(echo "$playlist" | wc -l)
    start_index=$((RANDOM % line_count + 1))
    echo "$playlist" | mpv --macos-fs-animation-duration=0 \
      --no-native-fs \
      --fs \
      --mute=yes \
      --playlist-start="$start_index" \
      --playlist=-
  else
    mpv --macos-fs-animation-duration=0 \
      --no-native-fs \
      --fs \
      --mute=yes \
      --playlist=-
  fi
else
  # No input provided
  show_usage
  exit 1
fi
