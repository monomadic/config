#!/bin/zsh

# Parse command-line arguments
PREVIEW_MODE="ascii"
PREVIEW_WINDOW="right:50%:hidden:noborder"
HIDE_PATH=false

while [[ "$#" -gt 0 ]]; do
  case $1 in
  --kitty)
    PREVIEW_MODE="kitty"
    shift
    ;;
  --hide-path)
    HIDE_PATH=true
    shift
    ;;
  *) break ;;
  esac
done

# Define common mpv options
MPV_COMMON_OPTS="--macos-fs-animation-duration=0 --no-native-fs --fs"

# Set FZF default options and conditionally hide path
FZF_DEFAULT_OPTS="--reverse --ansi --delimiter=/ --preview-window=down:1"
if [[ "$HIDE_PATH" == true ]]; then
  FZF_DEFAULT_OPTS+=" --with-nth=-1"
fi

# Set preview command based on preview mode
if [[ "$PREVIEW_MODE" == "kitty" ]]; then
  PREVIEW_CMD='
    ffprobe -v error -select_streams v:0 -count_packets -show_entries stream=width,height,codec_name,duration -of csv=p=0 {} |
    awk -F, '\''{printf "Resolution: %sx%s\nCodec: %s\nDuration: %.2f seconds\n", $1, $2, $3, $4}'\'';
    echo;
    ffmpeg -loglevel error -ss 00:00:08 -i {} -vf "scale=320:-1:flags=lanczos,select=eq(n\,0)" -vframes 1 -f image2 - 2>/dev/null |
    chafa -c 256 --size 80x40 --format=kitty --symbols all 2>/dev/null
  '
else
  PREVIEW_CMD='
    ffprobe -v error -select_streams v:0 -count_packets -show_entries stream=width,height,codec_name,duration -of csv=p=0 {} |
    awk -F, '\''{printf "Resolution: %sx%s\nCodec: %s\nDuration: %.2f seconds\n", $1, $2, $3, $4}'\'';
    echo;
    ffmpeg -loglevel error -ss 00:00:08 -i {} -vf "scale=80:-1,select=eq(n\,0)" -vframes 1 -f image2 - 2>/dev/null |
    chafa -c full --format=symbols --size=80x40 2>/dev/null
  '
fi

# Main fzf command
fzf \
  --multi \
  --exact \
  -i \
  --color=fg:#f8f8f2,bg:-1,hl:#f92672,fg+:#a6e22e,bg+:-1,hl+:#66d9ef,info:#66d9ef,prompt:#ae81ff,spinner:#66d9ef,pointer:#f92672,marker:#a6e22e \
  --preview "$PREVIEW_CMD" \
  --preview-window="$PREVIEW_WINDOW" \
  --bind 'enter:select-all+execute-silent(mpv --loop-file=1 '"$MPV_COMMON_OPTS"' {+})+deselect-all' \
  --bind 'alt-enter:select-all+execute-silent(mpv '"$MPV_COMMON_OPTS"' --loop-file=1 --length=10 --shuffle '"$MPV_COMMON_OPTS"' {+})+deselect-all' \
  --bind 'alt-o:execute-silent(mpv '"$MPV_COMMON_OPTS"' {+})' \
  --bind 'alt-L:select-all+execute-silent(mpv --loop-file=1 --length=2 --shuffle '"$MPV_COMMON_OPTS"' {+})+deselect-all' \
  --bind 'alt-A:select-all+execute(airflow-open {})' \
  --bind 'alt-a:select-all,alt-d:deselect-all,ctrl-/:toggle-preview' \
  --bind 'alt-e:select-all+execute(elmedia-open {})' \
  --bind 'alt-i:select-all+execute(iina-open {})' \
  --bind 'alt-c:execute(kitty @ launch --cwd $(dirname {}) lf)' \
  --bind 'alt-m:select-all+execute-silent(mpv '"$MPV_COMMON_OPTS"' {+})' \
  --bind 'alt-P:select-all+execute-silent(printf "%s\n" {+} > playlist.m3u)+abort' \
  --bind 'alt-p:toggle-preview' \
  --bind 'alt-r:execute(open --reveal {})' \
  --bind 'alt-s:select-all+accept' \
  --bind 'alt-t:execute-silent(kitty @ launch --cwd $(dirname {}))' \
  --bind 'alt-v:execute-silent(vlc {})' \
  --header $'enter:play-all | alt-o:play | alt-enter:loop-mode | alt-r:reveal-in-finder | alt-t:new-tab | alt-i:iina | alt-e:elmedia | alt-A:airflow | alt-a:select-all | alt-d:deselect-all | alt-l:lf | alt-s: stdout | alt-p:playlist\n' \
  --query "$*"
