#!/bin/zsh

# Initialize default settings
PREVIEW_MODE="ascii"
PREVIEW_WINDOW="right:50%:hidden:border"
FZF_DEFAULT_OPTS="--prompt '   ' --border --reverse --ansi --no-sort --delimiter=/ --preview-window=down:1 --header-first"

# Color Scheme
FZF_COLOR_OPTS=""
FZF_COLOR_OPTS+="fg:#fadaf2,"      # Regular foreground
FZF_COLOR_OPTS+="bg:#000000,"      # Regular background
FZF_COLOR_OPTS+="hl:#FFe22e,"      # Highlighted text (foreground)
FZF_COLOR_OPTS+="hl+:#FFe22e,"     # Highlighted text in selected line (foreground)
FZF_COLOR_OPTS+="fg+:#ff4499,"     # Selected line (foreground)
FZF_COLOR_OPTS+="bg+:#422042,"     # Selected line (background)
FZF_COLOR_OPTS+="info:#ae81ff,"    # Info line
FZF_COLOR_OPTS+="border:#000000,"  # Border color
FZF_COLOR_OPTS+="prompt:#FFFFFF,"  # Prompt
FZF_COLOR_OPTS+="pointer:#FFe22e," # Pointer to the current line
FZF_COLOR_OPTS+="marker:#a6e22e,"  # Multi-select marker
FZF_COLOR_OPTS+="spinner:#FFFFFF,"
FZF_COLOR_OPTS+="preview-bg:#111111,"
FZF_COLOR_OPTS+="preview-border:#111111,"
FZF_COLOR_OPTS+="header:#66ddee"

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
  case $1 in
  --kitty)
    PREVIEW_MODE="kitty"
    shift
    ;;
  --hide-path)
    FZF_DEFAULT_OPTS+=" --with-nth=-1"
    shift
    ;;
  *)
    break
    ;;
  esac
done

# Set the preview command based on the preview mode
if [[ "$PREVIEW_MODE" == "kitty" ]]; then
  PREVIEW_CMD='
    # Extract video metadata
    ffprobe -v error -select_streams v:0 -count_packets \
      -show_entries stream=width,height,codec_name,duration -of csv=p=0 {} | \
    awk -F, '\''{printf "Resolution: %sx%s\nCodec: %s\nDuration: %.2f seconds\n", $1, $2, $3, $4}'\'';

    echo;

    # Generate preview image and render with chafa (kitty graphics protocol)
    ffmpeg -loglevel error -ss 00:00:08 -i {} \
      -vf "scale=320:-1:flags=lanczos,select=eq(n\,0)" \
      -vframes 1 -f image2 - 2>/dev/null | \
    chafa -c 256 --size 80x40 --format=kitty --symbols all 2>/dev/null
  '
else
  PREVIEW_CMD='
    # Extract video metadata
    ffprobe -v error -select_streams v:0 -count_packets \
      -show_entries stream=width,height,codec_name,duration -of csv=p=0 {} | \
    awk -F, '\''{printf "Resolution: %sx%s\nCodec: %s\nDuration: %.2f seconds\n", $1, $2, $3, $4}'\'';

    echo;

    # Generate preview image and render with chafa (ASCII mode)
    ffmpeg -loglevel error -ss 00:00:08 -i {} \
      -vf "scale=80:-1,select=eq(n\,0)" \
      -vframes 1 -f image2 - 2>/dev/null | \
    chafa -c full --format=symbols --size=80x40 2>/dev/null
  '
fi

# Main fzf command
exec fzf \
  --read0 \
  --multi \
  --exact \
  --ignore-case \
  --margin 2% \
  --padding 3%,1% \
  --no-sort \
  --info=inline \
  --cycle \
  --pointer='▶' \
  --marker='✓' \
  --query "$*" \
  --ansi \
  --color=$FZF_COLOR_OPTS \
  --preview "$PREVIEW_CMD" \
  --preview-window="$PREVIEW_WINDOW" \
  --bind 'enter:select-all+execute-silent(mpv-play {+} &)+deselect-all' \
  --bind 'alt-enter:select-all+execute-silent(mpv-play --loop-file=1 --length=10 --shuffle {+})+deselect-all' \
  --bind 'alt-o:execute-silent(mpv-play {+})' \
  --bind 'alt-L:select-all+execute-silent(mpv-play --loop-file=1 --length=2 --shuffle {+})+deselect-all' \
  --bind 'alt-m:select-all+execute-silent(mpv-play {+})' \
  --bind 'alt-v:execute-silent(vlc {})' \
  --bind 'alt-A:select-all+execute(airflow-open {})' \
  --bind 'alt-e:select-all+execute(elmedia-open {})' \
  --bind 'alt-i:select-all+execute(iina-open {})' \
  --bind 'alt-c:execute-silent(echo "{}" | pbcopy)' \
  --bind 'alt-t:execute-silent(kitty @ launch --cwd "$(dirname {})")' \
  --bind 'alt-a:select-all,alt-d:deselect-all' \
  --bind 'alt-s:select-all+accept' \
  --bind 'ctrl-/:toggle-preview' \
  --bind 'alt-p:toggle-preview' \
  --bind 'alt-r:execute-silent(open --reveal "$(realpath "{}")")' \
  --bind 'ctrl-r:execute-silent(shuf -o /dev/stdout)' \
  --bind 'ctrl-s:execute-silent(sort -o /dev/stdout)' \
  --bind 'ctrl-d:execute-silent(ls -t {} | xargs -r -d "\n" echo > /tmp/fzf-sorted; cat /tmp/fzf-sorted)' \
  --bind 'alt-R:execute-silent(shuf -o /dev/stdout)' \
  --bind 'alt-S:execute-silent(sort -o /dev/stdout)' \
  --bind 'alt-D:execute-silent(ls -t {} | xargs -r -d "\n" echo > /tmp/fzf-sorted; cat /tmp/fzf-sorted)' \
  --header '󰌑 play all · 󰘵 o play selected · 󰘵 󰌑 loop-mode (10 sec) · 󰘵 r reveal in finder · 󰘵 t shell · 󰘵 p preview · 󰘵 i iina · 󰘵 e elmedia · 󰘵 A airflow · 󰘵 l lf · 󰘵 s stdout'
