#!/usr/bin/env zsh
# VirtualDJ stem packer for macOS - ALAC version
# Dependencies: ffmpeg, MP4Box (gpac)

set -euo pipefail

# Colors
RED=$'\033[0;31m'
GREEN=$'\033[0;32m'
YELLOW=$'\033[1;33m'
BLUE=$'\033[0;34m'
MAGENTA=$'\033[0;35m'
CYAN=$'\033[0;36m'
BOLD=$'\033[1m'
NC=$'\033[0m'

# VirtualDJ track order (do not change)
TRACK_NAMES=("mixed track" "vocal" "hihat" "bass" "instruments" "kick")

die() { print -r -- "${RED}ERROR: $*${NC}" >&2; exit 1; }

# Check dependencies
command -v ffmpeg >/dev/null 2>&1 || die "ffmpeg not found"
command -v MP4Box >/dev/null 2>&1 || die "MP4Box not found"

[[ $# -le 1 ]] || { print "Usage: $(basename "$0") [/path/to/stems]"; exit 2; }

FOLDER="$(cd "${1:-.}" 2>/dev/null && pwd)" || die "Cannot access directory: ${1:-.}"
[[ -d "$FOLDER" ]] || die "Not a directory: $FOLDER"

# Create temp workspace
tmpdir="$(mktemp -d)"
trap "rm -rf '$tmpdir'" EXIT

# Find the actual stem files (matches files ending in pattern)
find_file() {
  local patterns=("$@")
  setopt local_options null_glob
  for pattern in "${patterns[@]}"; do
    for f in "$FOLDER"/*${pattern}.wav; do
      [[ -f "$f" ]] && { print "$f"; return 0; }
    done
  done
  return 1
}

# Map stems to files
print "${CYAN}Locating stem files...${NC}"
KICK=$(find_file "kick" "drums" "drum") || die "No drums/kick file found"
HIHAT=$(find_file "hihat" "hihats" "drums" "drum") || die "No drums/hihat file found"  
INSTRUMENTS=$(find_file "other" "rhythm" "harmonic" "melodic") || die "No other/rhythm/harmonic file found"
VOCAL=$(find_file "vocal" "vocals" "acappella" "vox") || die "No vocal/vocals file found"
BASS=$(find_file "bass" "bassline") || die "No bass file found"

print "${GREEN}Found:${NC}"
print "  ${BLUE}kick${NC} → $(basename "$KICK")"
print "  ${BLUE}hihat${NC} → $(basename "$HIHAT")"
print "  ${BLUE}instruments${NC} → $(basename "$INSTRUMENTS")"
print "  ${BLUE}vocal${NC} → $(basename "$VOCAL")"
print "  ${BLUE}bass${NC} → $(basename "$BASS")"

# Check if drums is being used for both
USING_DRUMS_FOR_BOTH=false
if [[ "$KICK" == "$HIHAT" ]]; then
  USING_DRUMS_FOR_BOTH=true
  print "\n${YELLOW}→ Using $(basename "$KICK") for both kick and hihat${NC}"
fi

# Create mixed track
print "\n${CYAN}Creating mixed track...${NC}"
mixed_wav="$tmpdir/mixed.wav"

# Always use 5 inputs to match VirtualDJ playback (drums counted twice when shared)
ffmpeg -y -loglevel error \
  -i "$KICK" -i "$INSTRUMENTS" -i "$VOCAL" -i "$BASS" -i "$HIHAT" \
  -filter_complex "amix=inputs=5,volume=5" \
  "$mixed_wav" || die "Mix failed"

# Normalize all inputs to WAV
print "${CYAN}Normalizing stems...${NC}"
kick_wav="$tmpdir/kick.wav"
instruments_wav="$tmpdir/instruments.wav"
vocal_wav="$tmpdir/vocal.wav"
bass_wav="$tmpdir/bass.wav"
hihat_wav="$tmpdir/hihat.wav"

ffmpeg -y -loglevel error -i "$KICK" -c:a pcm_s16le "$kick_wav"
ffmpeg -y -loglevel error -i "$INSTRUMENTS" -c:a pcm_s16le "$instruments_wav"
ffmpeg -y -loglevel error -i "$VOCAL" -c:a pcm_s16le "$vocal_wav"
ffmpeg -y -loglevel error -i "$BASS" -c:a pcm_s16le "$bass_wav"

if [[ "$USING_DRUMS_FOR_BOTH" == true ]]; then
  cp "$kick_wav" "$hihat_wav"
else
  ffmpeg -y -loglevel error -i "$HIHAT" -c:a pcm_s16le "$hihat_wav"
fi

# Mux and encode to ALAC in one step
print "\n${CYAN}Encoding and muxing M4A (ALAC)...${NC}"
temp_m4a="$tmpdir/temp.m4a"

ffmpeg -y -loglevel error \
  -i "$kick_wav" \
  -i "$instruments_wav" \
  -i "$vocal_wav" \
  -i "$bass_wav" \
  -i "$hihat_wav" \
  -i "$mixed_wav" \
  -map 5:a -map 2:a -map 4:a -map 3:a -map 1:a -map 0:a \
  -c:a alac \
  -disposition:a:0 default \
  -metadata title="virtualdj" \
  -metadata artist="output" \
  "$temp_m4a" || die "Mux failed"

print "  ${GREEN}Encoded all tracks (ALAC lossless)${NC}"

# Add metadata
output="$FOLDER/$(basename "$FOLDER").vdjstems"
meta="$tmpdir/meta.txt"
cat > "$meta" <<EOF
tool=VirtualDJ 2023.7544
created=0
tempo=127
INITIALKEY=F
rate=0
EOF

print "${CYAN}Finalizing...${NC}"
MP4Box \
  -udta "1:type=name:str=${TRACK_NAMES[1]}" \
  -udta "2:type=name:str=${TRACK_NAMES[2]}" \
  -udta "3:type=name:str=${TRACK_NAMES[3]}" \
  -udta "4:type=name:str=${TRACK_NAMES[4]}" \
  -udta "5:type=name:str=${TRACK_NAMES[5]}" \
  -udta "6:type=name:str=${TRACK_NAMES[6]}" \
  -itags "$meta" \
  -brand isom:512 -rb mp42 -ab mp41 \
  -flat -out "$output" "$temp_m4a" 2>&1 | grep -v "Setting up" | grep -v "Flat storage" | grep -v "Unrecognize tag" || true

print "\n${BOLD}${GREEN}✓ Created: ${MAGENTA}$(basename "$output")${NC}"
