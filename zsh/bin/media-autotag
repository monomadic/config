#!/bin/zsh

autoload -U colors && colors

# Parse command line options
local dry_run=false
local -a video_files

while (( $# )); do
  case $1 in
    --dry-run) dry_run=true ;;
    -h|--help)
      print "Usage: ${commands[0]:t} [--dry-run] <video_files>"
      exit 0 ;;
    *) video_files+=($1) ;;
  esac
  shift
done

(( ${#video_files} == 0 )) && { print -P "%F{red}%B 󰅙 No video files specified%f%b"; exit 1 }

for video_file in $video_files; do
  [[ ! -e $video_file ]] && { print -P "%F{red}%B 󰅙 $video_file%f%b"; continue }

  local video_info=$(ffprobe -v error -select_streams v:0 -count_packets \
    -show_entries stream=width,height,r_frame_rate -of csv=p=0 "$video_file")

  [[ -z $video_info ]] && { print -P "%F{red}%B 󰅙 $video_file%f%b"; continue }

  local width=${${(s:,:)video_info}[1]}
  local height=${${(s:,:)video_info}[2]}
  local framerate=$(( (${${(s:,:)video_info}[3]:h} + ${${(s:,:)video_info}[3]:t}/2) \
    / ${${(s:,:)video_info}[3]:t} ))

  local res_tag=""
  (( height >= 2160 )) && res_tag="#4k"
  (( height >= 1080 && height < 2160 )) && res_tag="#1080p"
  (( height >= 720 && height < 1080 )) && res_tag="#720p"

  local fps_tag="#${framerate}fps"
  local tags="${res_tag:+$res_tag }${fps_tag}"

  [[ -z $res_tag && -z $fps_tag ]] && {
    print -P "%F{yellow}%B 󰄾 $video_file%f%b"
    continue
  }

  if [[ $video_file =~ '#(720p|1080p|4k|[0-9]+fps)' ]]; then
    local current_tags=$(print $video_file | grep -o '#\(720p\|1080p\|4k\|[0-9]\+fps\)' | tr '\n' ' ' | sed 's/ $//')
    if [[ $current_tags != ${tags## } ]]; then
      print -P "%F{red}%B 󰅙 $video_file%f%b %F{242}($current_tags → ${tags## })%f"
      continue
    else
      print -P "%F{yellow}%B 󰄾 $video_file%f%b"
      continue
    fi
  fi

  local new_filename="${video_file:r} ${tags}.${video_file:e}"

  [[ -e $new_filename ]] && { print -P "%F{red}%B 󰅙 $video_file%f%b"; continue }

  if $dry_run; then
    local old_part=${video_file:t:r}
    local new_part=" ${tags}"
    print -P "%F{green}%B 󰄴 ${old_part}%F{cyan}${new_part}%F{green}.${video_file:e}%f%b"
  else
    if mv -n $video_file $new_filename; then
      local old_part=${video_file:t:r}
      local new_part=" ${tags}"
      print -P "%F{green}%B 󰄴 ${old_part}%F{cyan}${new_part}%F{green}.${video_file:e}%f%b"
    else
      print -P "%F{red}%B 󰅙 $video_file%f%b"
    fi
  fi
done
