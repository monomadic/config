#!/bin/zsh
set +o monitor

handle_directory_selection() {
  local pipe=$(mktemp -u)
  mkfifo "$pipe" || return 1

  cleanup() {
    local exit_code=$?
    # Kill any remaining background processes in our group
    kill $(jobs -p) 2>/dev/null
    wait 2>/dev/null || true
    rm -f "$pipe"
    trap - INT TERM EXIT HUP
    exit $exit_code
  }

  trap cleanup INT TERM EXIT HUP

  # Read from stdin to pipe in background, but close when stdin closes
  (cat >"$pipe") &
  local input_pid=$!

  local dir
  # Run fzf in a subshell so we can better control its termination
  # --preview 'tree -C {} 2>/dev/null || lsd --icon always --long --depth 1 --ignore-config --group-directories-first --color always {}' \
  dir=$(
    fzf --ansi \
      --bind 'alt-n:preview-page-down,alt-p:preview-page-up' \
      --bind 'ctrl-/:toggle-preview' \
      --bind 'alt-p:toggle-preview' \
      --bind 'ctrl-a:toggle-all' \
      --multi \
      --no-info \
      --height=30% \
      --exact \
      --prompt="❯> " <"$pipe"
  )
  local ret=$?

  if [[ $ret -eq 0 && -n "$dir" ]]; then
    printf '%s\n' "$dir"
  fi
  return $ret
}

handle_directory_selection "$@"
