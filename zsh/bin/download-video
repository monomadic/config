#!/usr/bin/env zsh
set -euo pipefail

# ANSI colour codes
local GREEN=$'\e[32m'
local RED=$'\e[31m'
local NC=$'\e[0m'

# print error and exit
error_exit() {
  print -P "${RED}[error] $1${NC}"
  exit 1
}

# ensure command exists
check_command() {
  whence -p "$1" &>/dev/null || error_exit "$1 is not installed"
}

check_command yt-dlp
check_command terminal-notifier

usage() {
  cat <<EOF
Usage: ${0:t} [--mp4|--webm] <mode> <URL> [yt-dlp args]
Modes:
  music-video (m)   Download music video
  audio-only  (a)   Download audio only
  video-only  (v)   Download video without audio
  adult        (A)  Download adult content
  youtube      (y)  Download YouTube video
  best-quality (b)  Download best quality (video+audio)
EOF
}

(($# < 2)) && usage && exit 1

# parse format preference
local FORMAT_PREF=''
while [[ $1 == --* ]]; do
  case $1 in
  --mp4) FORMAT_PREF='[ext=mp4]' ;;
  --webm) FORMAT_PREF='[ext=webm]' ;;
  *) break ;;
  esac
  shift
done

local MODE=$1 URL=$2
shift 2
local EXTRA_ARGS=("$@")

# detect passthrough commands
local PASSTHROUGH=0
for arg in "${EXTRA_ARGS[@]}"; do
  [[ $arg =~ ^--(list-formats|print|dump-json)$ ]] && {
    PASSTHROUGH=1
    break
  }
done

# normalize shortcuts
case $MODE in
m) MODE=music-video ;;
a) MODE=audio-only ;;
v) MODE=video-only ;;
p | A) MODE=adult ;;
y) MODE=youtube ;;
b) MODE=best-quality ;;
esac

# base yt-dlp options
typeset -a YTDL_BASE=(
  yt-dlp
  --cookies-from-browser brave
  --continue --progress --verbose
  --retries infinite --fragment-retries infinite --socket-timeout 15
)

if ((PASSTHROUGH)); then
  YTDL_CMD=("${YTDL_BASE[@]}" "${EXTRA_ARGS[@]}" "$URL")
else
  local OUTPUT_FMT=''
  typeset -a FMT_ARGS
  case $MODE in
  adult)
    OUTPUT_FMT='[%(uploader|Unknown)s] %(title)s [%(extractor)s].%(ext)s'
    FMT_ARGS=(
      -f "bv*${FORMAT_PREF}+ba/best"
      --merge-output-format mp4
      --embed-metadata --embed-info-json
      --match-filter "duration > 60"
    )
    ;;
  music-video)
    OUTPUT_FMT='%(artist|)s - %(title)s.%(ext)s'
    FMT_ARGS=(
      -f "bestvideo${FORMAT_PREF}[ext^=avc1]+bestaudio${FORMAT_PREF}"
      --merge-output-format mp4
      --embed-metadata --embed-subs --embed-chapters
    )
    ;;
  audio-only)
    OUTPUT_FMT='%(artist)s - %(title)s.%(ext)s'
    FMT_ARGS=(
      -f "bestaudio${FORMAT_PREF}"
      --extract-audio --audio-format m4a
      --embed-metadata
    )
    ;;
  video-only)
    OUTPUT_FMT='%(artist)s - %(title)s.%(ext)s'
    FMT_ARGS=(
      -f "bestvideo${FORMAT_PREF}"
      --merge-output-format mp4
      --embed-metadata
    )
    ;;
  youtube)
    OUTPUT_FMT='[%(channel)s] %(title)s [YouTube][%(id)s].%(ext)s'
    FMT_ARGS=(
      -f "bv*${FORMAT_PREF}+ba/best"
      --merge-output-format mp4
      --embed-metadata --embed-subs --embed-chapters
    )
    ;;
  best-quality)
    OUTPUT_FMT='%(uploader)s - %(title)s.%(ext)s'
    FMT_ARGS=(
      -f bestvideo+ba/best
      --merge-output-format mkv
      --embed-metadata
    )
    ;;
  *)
    error_exit "Unknown mode: $MODE"
    ;;
  esac

  YTDL_CMD=(
    "${YTDL_BASE[@]}"
    "${FMT_ARGS[@]}"
    --output "$OUTPUT_FMT"
    "${EXTRA_ARGS[@]}"
    "$URL"
  )
fi

print -P "${GREEN}Executing:${NC} ${YTDL_CMD[*]}"
# run it unquoted so you donâ€™t get literal backslashes
"${YTDL_CMD[@]}"
