#!/bin/sh
set -e

# ANSI color codes
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No color

# Function to print error and exit
error_exit() {
  printf "${RED}[error] %s${NC}\n" "$1"
  exit 1
}

# Check if a command is installed
check_command() {
  if ! command -v "$1" >/dev/null 2>&1; then
    error_exit "$1 is not installed. Please install it."
  fi
}

# Check dependencies
check_command "yt-dlp"
check_command "terminal-notifier"

# Function to print usage
print_usage() {
  cat <<EOF
Usage: $(basename "$0") [--best-quality] <command> <URL> [additional yt-dlp args]
Commands:
  music-video (m) <URL> - Download music video
  audio-only (a) <URL>  - Download audio only
  video-only (v) <URL>  - Download video without audio
  porn (p) <URL>        - Download adult content
  youtube (y) <URL>     - Download YouTube video
Options:
  --best-quality        Download using the best quality format options
Additional commands like --list-formats are passed directly to yt-dlp.
EOF
}

# Exit if arguments are missing
[ $# -lt 2 ] && print_usage && exit 1

# Parse options for best-quality preference
BEST_QUALITY=false
while [ $# -gt 0 ]; do
  case "$1" in
    --best-quality)
      BEST_QUALITY=true
      shift
      ;;
    *)
      break
      ;;
  esac
done

COMMAND="$1"
URL="$2"
shift 2
ADDITIONAL_ARGS=("$@") # Capture all additional arguments

# Map command shortcuts
case "$COMMAND" in
  m) COMMAND="music-video" ;;
  a) COMMAND="audio-only" ;;
  v) COMMAND="video-only" ;;
  p) COMMAND="porn" ;;
  y) COMMAND="youtube" ;;
esac

# Base yt-dlp command
YT_DLP_BASE=(yt-dlp --cookies-from-browser brave --continue --progress --verbose \
  --retries infinite --fragment-retries infinite --socket-timeout 15)

# Add format options only if --best-quality is provided
if [ "$BEST_QUALITY" = true ]; then
  case "$COMMAND" in
    "porn")
      FORMAT_ARGS=(-f "bv*+ba/best" --merge-output-format mp4 --embed-metadata --embed-info-json \
        --match-filter "duration > 60" --embed-subs --embed-chapters)
      ;;
    "music-video")
      FORMAT_ARGS=(-f "bestvideo+bestaudio" --merge-output-format mp4 --embed-metadata \
        --embed-subs --embed-chapters)
      ;;
    "audio-only")
      FORMAT_ARGS=(-f "bestaudio" --extract-audio --audio-format m4a --embed-metadata)
      ;;
    "video-only")
      FORMAT_ARGS=(-f "bestvideo" --merge-output-format mp4 --embed-metadata)
      ;;
    "youtube")
      FORMAT_ARGS=(-f "bv*+ba/best" --merge-output-format mp4 --embed-metadata --embed-subs \
        --embed-chapters)
      ;;
    *)
      FORMAT_ARGS=()
      ;;
  esac
else
  FORMAT_ARGS=()
fi

# Combine yt-dlp command
YT_DLP_CMD=("${YT_DLP_BASE[@]}" "${FORMAT_ARGS[@]}" "${ADDITIONAL_ARGS[@]}" "$URL")

# Print command for debugging
printf "${GREEN}Executing command: %s${NC}\n" "${YT_DLP_CMD[*]@Q}"

# Execute yt-dlp
"${YT_DLP_CMD[@]}"
