#!/usr/bin/env zsh
set -euo pipefail
set -o pipefail

# deps
for bin in ffmpeg flac; do
  command -v "$bin" >/dev/null || { print -u2 "Missing dependency: $bin"; exit 127; }
done

# args
if (( $# != 1 )); then
  print -u2 "Usage: ${0:t} /path/to/input.wav"
  exit 2
fi

in="$1"
[[ -f "$in" ]] || { print -u2 "No such file: $in"; exit 2; }
ext="${in:e:l}"
[[ "$ext" == "wav" ]] || print -u2 "Warning: input extension is not .wav (got .$ext), continuingâ€¦"

dir="${in:h}"
base="${in:t:r}"
out="$dir/${base}_16bit_44k.flac"

[[ -e "$out" ]] && { print -u2 "Refusing to overwrite: $out"; exit 1; }

tmp="$(mktemp -t wav2flac.XXXXXX).flac"
cleanup() { [[ -e "$tmp" ]] && rm -f -- "$tmp"; }
trap cleanup EXIT INT TERM

# Convert float/integer WAV -> 16-bit 44.1k WAV (with soxr + TPDF HP dither), pipe to FLAC
if ! ffmpeg -v error -i "$in" \
      -af "aresample=out_sample_rate=44100:resampler=soxr:dither_method=triangular_hp" \
      -sample_fmt s16 -c:a pcm_s16le -f wav - \
   | flac -8 -V -f -o "$tmp" - ; then
  print -u2 "Conversion failed."
  exit 1
fi

mv -n -- "$tmp" "$out" || { print -u2 "Atomic move failed."; exit 1; }
trap - EXIT
print -- "Wrote: $out"
