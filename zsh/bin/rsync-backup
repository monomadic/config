#!/bin/zsh

# Usage information
usage() {
  echo "Usage: $0 [--quiet] [--dry-run] [--log logfile] <source> <destination> [filter_pattern]"
  exit 1
}

# Default options
quiet_mode=false
dry_run=false
logfile=""

# Parse options
while [[ "$1" =~ ^-- ]]; do
  case "$1" in
  --quiet)
    quiet_mode=true
    shift
    ;;
  --dry-run)
    dry_run=true
    shift
    ;;
  --log)
    logfile="$2"
    shift 2
    ;;
  *)
    echo "Unknown option: $1"
    usage
    ;;
  esac
done

# Ensure source and destination arguments are provided
if [ "$#" -lt 2 ]; then
  echo "Error: Missing source or destination."
  usage
fi

source_path="$1"
dest_path="$2"
filter_pattern="$3"

# Validate paths
for dir in "$source_path" "$dest_path"; do
  if [ ! -d "$dir" ]; then
    echo "Error: Directory '$dir' does not exist or is inaccessible."
    exit 1
  fi
done

# Rsync options
rsync_opts=(-av --delete --prune-empty-dirs --exclude '*/.*')

if [ -n "$filter_pattern" ]; then
  rsync_opts+=(--include '*/' --include "*${filter_pattern}*" --exclude '*')
else
  rsync_opts+=(--include '*/' --include '*')
fi

$dry_run && rsync_opts+=(--dry-run)

# Execute rsync
run_rsync() {
  rsync_opts+=("--out-format=%n") # output filenames only, preserving spaces/newlines

  rsync "${rsync_opts[@]}" "$source_path/" "$dest_path/" | while IFS= read -r file; do
    [ -n "$file" ] && printf "%s -> %s\n" "$source_path/$file" "$dest_path/$file"
  done
}

if [ -n "$logfile" ]; then
  run_rsync >"$logfile" 2>&1
else
  run_rsync
fi

rsync_exit_code=$?

[ $rsync_exit_code -eq 0 ] && ! $quiet_mode && echo "Rsync completed successfully."
[ $rsync_exit_code -ne 0 ] && echo "Rsync encountered an error. Exit code: $rsync_exit_code"

exit $rsync_exit_code
