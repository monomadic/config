#!/usr/bin/env zsh

# Display usage information
usage() {
  echo "Usage: $0 [--color] [--match PATTERN] [--sort SORT_OPTION] [--reverse]"
  echo "List media files using ls-media command with sorting capabilities"
  echo "Options:"
  echo "  --color            Enable colored output"
  echo "  --match PATTERN    Only list files matching the given pattern"
  echo "  --sort SORT_OPTION Sort files by the given option (modified, size, name)"
  echo "  --reverse          Reverse the sort order"
}

# Parse arguments
color_option=""
match_pattern=""
sort_option=""
reverse_option=""
ls_media_args=""

while [[ $# -gt 0 ]]; do
  case $1 in
  --color)
    color_option="--color"
    ls_media_args+=" --color"
    shift
    ;;
  --match)
    if [[ -z "$2" ]]; then
      echo "Error: --match requires a PATTERN argument"
      usage
      exit 1
    fi
    match_pattern="$2"
    ls_media_args+=" --match '$2'"
    shift 2
    ;;
  --sort)
    if [[ -z "$2" ]]; then
      echo "Error: --sort requires a SORT_OPTION argument"
      usage
      exit 1
    fi
    sort_option="$2"
    shift 2
    ;;
  --reverse)
    reverse_option="-r"
    shift
    ;;
  *)
    echo "Error: Unknown option $1"
    usage
    exit 1
    ;;
  esac
done

# Function to sort files based on the given option
sort_files() {
  case "$sort_option" in
  modified)
    sort $reverse_option -k6,7
    ;;
  size)
    sort $reverse_option -k5 -n
    ;;
  name)
    sort $reverse_option -k9
    ;;
  *)
    cat # No sorting if invalid option
    ;;
  esac
}

# Run ls-media and sort the output
eval "ls-media $ls_media_args" | while IFS= read -r file; do
  ls -l --time-style=long-iso "$file" 2>/dev/null
done | sort_files
